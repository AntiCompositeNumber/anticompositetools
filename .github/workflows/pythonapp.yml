name: Python application

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Load pywikibot config
      env:
          USER_CONFIG_PY: ${{ secrets.user_config_py }}
      run: echo $USER_CONFIG_PY > user-config.py
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pip install coverage
        coverage run -m pytest
    - name: Coveralls
      env:        
        COVERALLS_REPO_TOKEN: ${{ secrets.coveralls_repo_key }}
      continue-on-error: true
      run: |
        pip install coveralls
        coveralls
  deploy:

    runs-on: ubuntu-latest
    needs: build 
    steps:
    - name: create deployment
      uses: NiklasMerz/github-deployment-action@v1.0.0
      if: contains(github.ref, 'master')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: -o AntiCompositeNumber -r anticompositetools -c master -e production
    - name: set deployment status
      uses: NiklasMerz/github-deployment-action@v1.0.0
      if: contains(github.ref, 'master')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: -o AntiCompositeNumber -r anticompositetools -s pending -f
